% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/verb-arrange.R
\name{arrange.tbl_lazy}
\alias{arrange.tbl_lazy}
\title{Arrange rows by variables in a remote database table}
\usage{
\method{arrange}{tbl_lazy}(.data, ..., .by_group = FALSE)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr). See \emph{Methods}, below, for
more details.}

\item{...}{Variables, or functions or variables. Use desc() to sort a
variable in descending order.}

\item{.by_group}{If \code{TRUE}, will sort first by grouping variable. Applies to
grouped data frames only.}
}
\value{
An object of the same class as \code{.data}.
}
\description{
Order rows of database tables by an expression involving its variables.
Use \code{\link[=window_order]{window_order()}} instead to define the sort order for window functions
without affecting the resulting order.
The order is active only for the next verb.
}
\details{
Order is mostly irrelevant in relational databases, except for the following
cases:
\itemize{
\item Returning results with \code{\link[=collect]{collect()}},
\item Populating a table with \code{\link[=compute]{compute()}},
\item Processing the first few rows with \code{\link[=head]{head()}},
\item Evaluating window functions, see \code{\link[=window_order]{window_order()}}.
}

In particular, subqueries never need to specify an order,
except when the number of rows returned from the subquery is limited.
Therefore, \code{arrange()} should only be used as the last step in a pipe,
or immediately before \code{head()}.

An empty \code{arrange()} call resets the sort order.
This may be useful if the lazy table is created outside of your control.
}
\section{dbplyr 1.4.3 and earlier}{

In dbplyr 1.4.3 and earlier, the \code{arrange()} and \code{window_order()} verbs
incorrectly added columns to the existing order.
Pipes with multiple such verbs led to SQL code
that was inconsistent with the intent, and sometimes erroneous.
The current version warns if multiple calls to \code{arrange()}
or \code{window_order()} are used in a pipe.
If necessary, add an empty \code{arrange()} or \code{window_order()} call
to silence this warning.
}

\section{Missing values}{

Compared to its sorting behaviour on local data, the \code{\link[=arrange]{arrange()}} method for
most database tables sorts NA at the beginning unless wrapped with \code{\link[=desc]{desc()}}.
Users can override this behaviour by explicitly sorting on \code{is.na(x)}.
}

\examples{
library(dplyr)

dbplyr::memdb_frame(a = c(3, 4, 1, 2)) \%>\%
  arrange(a)

# NA sorted first
dbplyr::memdb_frame(a = c(3, 4, NA, 2)) \%>\%
  arrange(a)

# override by sorting on is.na() first
dbplyr::memdb_frame(a = c(3, 4, NA, 2)) \%>\%
  arrange(is.na(a), a)

}
